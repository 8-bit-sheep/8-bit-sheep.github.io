{"version":3,"file":"cljs.core.async.impl.ioc_helpers.js","sources":["cljs/core/async/impl/ioc_helpers.cljs"],"mappings":"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","names":["statearr-32298","state","c","continue-block","value","statearr-32295","cljs.core/not","catch-block","statearr-32299","and__3925__auto__","exception","cljs.core.async.impl.ioc-helpers/BINDINGS-IDX","cljs.core.async.impl.ioc-helpers/aget-object","cljs.core.async.impl.ioc-helpers/CURRENT-EXCEPTION","cljs.core.async.impl.ioc-helpers/return-chan","finally-block","cljs.core.async.impl.ioc-helpers/fn-handler","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","catch-exception","exception-frame","js/Object","ex","statearr-32265","cljs.core.async.impl.ioc-helpers/VALUE-IDX","x","cljs.core.async.impl.ioc-helpers/STATE-IDX","blk","cljs.core.async.impl.ioc-helpers/FN-IDX","statearr-32269","ret-val","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","arr","idx","statearr-32266","cljs.core/deref","cb","cljs.core.async.impl.ioc-helpers/EXCEPTION-FRAMES","state-array","statearr-32297","statearr-32300","cljs.core.async.impl.ioc-helpers/USER-START-IDX","statearr-32270","cljs.core.async.impl.ioc-helpers/run-state-machine","o","cljs.core/keyword-identical?","cljs.core.async.impl.ioc-helpers/take!","_","temp__5455__auto__","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","f","fexpr__32263","G__32278","cljs.core.async.impl.ioc-helpers/aset-object","cljs.core.async.impl.ioc-helpers/process-exception","cljs.core.async.impl.ioc-helpers/->ExceptionFrame","cljs.core.async.impl.ioc-helpers/finished?","js/Error","val","js/cljs","js/cljs.core","js/cljs.core.async","js/cljs.core.async.impl","js/cljs.core.async.impl.ioc-helpers","js/cljs.core.async.impl.ioc-helpers.t_cljs$core$async$impl$ioc_helpers32260","cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers32260","_32262","meta32261","cljs.core/PROTOCOL_SENTINEL","this__4179__auto__","writer__4180__auto__","opt__4181__auto__","cljs.core/-write","cljs.core.async.impl.ioc-helpers/->t_cljs$core$async$impl$ioc_helpers32260","cljs.core.async.impl.ioc-helpers/add-exception-frame","statearr-32296","cljs.core.async.impl.ioc-helpers/put!","this__11998__auto__","k__11999__auto__","cljs.core._lookup.cljs$core$IFn$_invoke$arity$3","this__12000__auto__","k32274","else__12001__auto__","cljs.core/Keyword","prev","cljs.core.get.cljs$core$IFn$_invoke$arity$3","__extmap","this__12012__auto__","writer__12013__auto__","opts__12014__auto__","pr-pair__12015__auto__","keyval__12016__auto__","cljs.core/pr-sequential-writer","cljs.core/pr-writer","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/PersistentVector","G__32273","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__11996__auto__","__meta","this__11993__auto__","__hash","this__12002__auto__","cljs.core/count","this__11994__auto__","h__4048__auto__","fexpr__32279","coll__11995__auto__","cljs.core/hash-unordered-coll","this32275","other32276","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","this__12007__auto__","k__12008__auto__","cljs.core/contains?","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","cljs.core/-with-meta","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core/not-empty","this__12005__auto__","k__12006__auto__","pred__32280","expr__32281","G__32283","G__32284","G__32285","G__32286","G__32287","G__32288","G__32289","G__32290","G__32291","G__32292","this__12010__auto__","cljs.core/seq","this__11997__auto__","this__12003__auto__","entry__12004__auto__","cljs.core/vector?","cljs.core/-assoc","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","cljs.core/-conj","cljs.core.async.impl.ioc-helpers/ExceptionFrame","this__4227__auto__","cljs.core/List","writer__4228__auto__","G__32277","extmap__4223__auto__","G__32293","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","cljs.core/record?","cljs.core.async.impl.ioc-helpers/map->ExceptionFrame","e32264"],"sourcesContent":["(ns cljs.core.async.impl.ioc-helpers\n  (:require [cljs.core.async.impl.protocols :as impl])\n  (:require-macros [cljs.core.async.impl.ioc-macros :as ioc]))\n\n(def ^:const FN-IDX 0)\n(def ^:const STATE-IDX 1)\n(def ^:const VALUE-IDX 2)\n(def ^:const BINDINGS-IDX 3)\n(def ^:const EXCEPTION-FRAMES 4)\n(def ^:const CURRENT-EXCEPTION 5)\n(def ^:const USER-START-IDX 6)\n\n(defn aset-object [arr idx o]\n  (aget arr idx o))\n\n(defn aget-object [arr idx]\n  (aget arr idx))\n\n\n(defn finished?\n  \"Returns true if the machine is in a finished state\"\n  [state-array]\n  (keyword-identical? (aget state-array STATE-IDX) :finished))\n\n(defn- fn-handler\n  [f]\n  (reify\n   impl/Handler\n   (active? [_] true)\n   (blockable? [_] true)\n   (commit [_] f)))\n\n\n(defn run-state-machine [state]\n  ((aget-object state FN-IDX) state))\n\n(defn run-state-machine-wrapped [state]\n  (try\n    (run-state-machine state)\n    (catch js/Object ex\n      (impl/close! ^not-native (aget-object state USER-START-IDX))\n      (throw ex))))\n\n(defn take! [state blk ^not-native c]\n  (if-let [cb (impl/take! c (fn-handler\n                                   (fn [x]\n                                     (ioc/aset-all! state VALUE-IDX x STATE-IDX blk)\n                                     (run-state-machine-wrapped state))))]\n    (do (ioc/aset-all! state VALUE-IDX @cb STATE-IDX blk)\n        :recur)\n    nil))\n\n(defn put! [state blk ^not-native c val]\n  (if-let [cb (impl/put! c val (fn-handler (fn [ret-val]\n                                             (ioc/aset-all! state VALUE-IDX ret-val STATE-IDX blk)\n                                             (run-state-machine-wrapped state))))]\n    (do (ioc/aset-all! state VALUE-IDX @cb STATE-IDX blk)\n        :recur)\n    nil))\n\n(defn return-chan [state value]\n  (let [^not-native c (aget state USER-START-IDX)]\n           (when-not (nil? value)\n             (impl/put! c value (fn-handler (fn [] nil))))\n           (impl/close! c)\n           c))\n\n(defrecord ExceptionFrame [catch-block\n                           ^Class catch-exception\n                           finally-block\n                           continue-block\n                           prev])\n\n(defn add-exception-frame [state catch-block catch-exception finally-block continue-block]\n  (ioc/aset-all! state\n                 EXCEPTION-FRAMES\n                 (->ExceptionFrame catch-block\n                                   catch-exception\n                                   finally-block\n                                   continue-block\n                                   (aget-object state EXCEPTION-FRAMES))))\n\n(defn process-exception [state]\n  (let [exception-frame (aget-object state EXCEPTION-FRAMES)\n        catch-block (:catch-block exception-frame)\n        catch-exception (:catch-exception exception-frame)\n        exception (aget-object state CURRENT-EXCEPTION)]\n    (cond\n     (and exception\n          (not exception-frame))\n     (throw exception)\n\n     (and exception\n          catch-block\n          (or (= :default catch-exception)\n              (instance? catch-exception exception)))\n     (ioc/aset-all! state\n                    STATE-IDX\n                    catch-block\n                    VALUE-IDX\n                    exception\n                    CURRENT-EXCEPTION\n                    nil\n                    EXCEPTION-FRAMES\n                    (assoc exception-frame\n                      :catch-block nil\n                      :catch-exception nil))\n\n\n     (and exception\n          (not catch-block)\n          (not (:finally-block exception-frame)))\n\n     (do (ioc/aset-all! state\n                        EXCEPTION-FRAMES\n                        (:prev exception-frame))\n         (recur state))\n\n     (and exception\n          (not catch-block)\n          (:finally-block exception-frame))\n     (ioc/aset-all! state\n                    STATE-IDX\n                    (:finally-block exception-frame)\n                    EXCEPTION-FRAMES\n                    (assoc exception-frame\n                      :finally-block nil))\n\n     (and (not exception)\n          (:finally-block exception-frame))\n     (do (ioc/aset-all! state\n                        STATE-IDX\n                        (:finally-block exception-frame)\n                        EXCEPTION-FRAMES\n                        (assoc exception-frame\n                          :finally-block nil)))\n\n     (and (not exception)\n          (not (:finally-block exception-frame)))\n     (do (ioc/aset-all! state\n                   STATE-IDX\n                   (:continue-block exception-frame)\n                   EXCEPTION-FRAMES\n                   (:prev exception-frame)))\n\n     :else (throw (js/Error. \"No matching clause\")))))\n"]}